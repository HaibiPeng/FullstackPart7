{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jdszsl/Desktop/Aalto/Aalto-CommunicationsEngineering/CS-E4670FullStackWebDevelopmentD/part7/bloglist/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\nimport Notification from './components/Notification';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSuccessNotification, setErrorNotification } from './reducers/notificationReducer';\nimport { createBlog, AddLikes, DeleteBlog } from './reducers/blogReducer';\nimport { initializeBlogs } from './reducers/blogReducer';\n\nconst App = () => {\n  _s();\n\n  //const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  const blogs = useSelector(state => state.blogs);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(setErrorNotification('wrong username or password', 5));\n    }\n  };\n\n  const loginForm = () => {\n    return /*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      password: password,\n      handleUsernameChange: ({\n        target\n      }) => setUsername(target.value),\n      handlePasswordChange: ({\n        target\n      }) => setPassword(target.value),\n      handleSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleLogout = async event => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    blogService.setToken(null);\n    setUser(null);\n    setUsername('');\n    setPassword('');\n    dispatch(setSuccessNotification('logged out successfully', 5));\n  };\n\n  const blogFormRef = useRef();\n\n  const addBlog = blogObject => {\n    blogFormRef.current.toggleVisibility();\n    dispatch(createBlog(blogObject)).then(dispatch(setSuccessNotification(`a new blog '${blogObject.title}' by ${blogObject.author} added`, 5))).catch(error => {\n      dispatch(setErrorNotification(error.response.data.error, 5));\n    });\n  };\n\n  const creatBlogForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"new blog\",\n    ref: blogFormRef,\n    children: /*#__PURE__*/_jsxDEV(BlogForm, {\n      createBlog: addBlog,\n      user: user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n\n  const blogList = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"showblogs\",\n      children: blogs.sort((a, b) => parseFloat(b.likes) - parseFloat(a.likes)).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        user: user.username,\n        addLikes: () => addLikes(blog.id),\n        deleteBlog: () => deleteBlog(blog.id)\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.username, \" logged in\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), creatBlogForm(), blogList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jj6Sc/O7RIlvGjzLVssas4Z+Bv4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jdszsl/Desktop/Aalto/Aalto-CommunicationsEngineering/CS-E4670FullStackWebDevelopmentD/part7/bloglist/src/App.js"],"names":["React","useState","useEffect","useRef","Blog","blogService","loginService","BlogForm","LoginForm","Togglable","Notification","useSelector","useDispatch","setSuccessNotification","setErrorNotification","createBlog","AddLikes","DeleteBlog","initializeBlogs","App","username","setUsername","password","setPassword","user","setUser","dispatch","blogs","state","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","loginForm","target","value","handleLogout","removeItem","blogFormRef","addBlog","blogObject","current","toggleVisibility","then","title","author","catch","error","response","data","creatBlogForm","blogList","sort","a","b","parseFloat","likes","map","blog","addLikes","id","deleteBlog"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSuccessNotification, setErrorNotification } from './reducers/notificationReducer'\nimport { createBlog, AddLikes, DeleteBlog } from './reducers/blogReducer'\nimport { initializeBlogs } from './reducers/blogReducer'\n\nconst App = () => {\n  //const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const blogs = useSelector(state => state.blogs)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      dispatch(setErrorNotification('wrong username or password', 5))\n    }\n  }\n\n  const loginForm = () => {\n    return (\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    )\n  }\n\n  const handleLogout = async (event) => {\n    window.localStorage.removeItem('loggedBlogappUser')\n\n    blogService.setToken(null)\n    setUser(null)\n    setUsername('')\n    setPassword('')\n    dispatch(setSuccessNotification('logged out successfully', 5))\n  }\n\n  const blogFormRef = useRef()\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    dispatch(createBlog(blogObject)).then(\n      dispatch(setSuccessNotification(`a new blog '${blogObject.title}' by ${blogObject.author} added`, 5))\n    )\n    .catch (error => {\n        dispatch(setErrorNotification(error.response.data.error, 5))\n      })\n  }\n\n  const creatBlogForm = () => (\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} user={user.username}/>\n    </Togglable>\n  )\n\n  \n\n  const blogList = () => {\n    return (\n      <div id='showblogs'>\n        {blogs.sort((a, b) => parseFloat(b.likes) - parseFloat(a.likes)).map(blog =>\n          <Blog key={blog.id} blog={blog} user={user.username}\n            addLikes={() => addLikes(blog.id)} deleteBlog={() => deleteBlog(blog.id)}/>\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Notification />\n      {user === null ?\n        loginForm() :\n        <div>\n          <h2>blogs</h2>\n          <p>{user.username} logged in<button onClick={handleLogout}>logout</button></p>\n          {creatBlogForm()}\n          {blogList()}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}