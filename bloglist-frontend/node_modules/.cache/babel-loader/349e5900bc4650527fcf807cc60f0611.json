{"ast":null,"code":"import blogService from '../services/blogs';\nimport loginService from '../services/login';\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_TOKEN':\n      return action.user;\n\n    case 'GET_TOKEN':\n      return action.user;\n\n    case 'REMOVE_TOKEN':\n      return null;\n\n    case 'SIGN_UP':\n      return action.user;\n\n    default:\n      return state;\n  }\n};\n\nexport const saveToken = (username, password) => {\n  return async dispatch => {\n    const user = await loginService.login({\n      username,\n      password\n    });\n    window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n    blogService.setToken(user.token);\n    dispatch({\n      type: 'SET_TOKEN',\n      user: user\n    });\n  };\n};\nexport const getToken = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n    let user = null;\n\n    if (loggedUserJSON) {\n      user = JSON.parse(loggedUserJSON);\n      blogService.setToken(user.token);\n    }\n\n    dispatch({\n      type: 'GET_TOKEN',\n      user: user\n    });\n  };\n};\nexport const removeToken = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    blogService.setToken(null);\n    dispatch({\n      type: 'REMOVE_TOKEN'\n    });\n  };\n};\nexport default userReducer;","map":{"version":3,"sources":["/Users/jdszsl/Desktop/Aalto/Aalto-CommunicationsEngineering/CS-E4670FullStackWebDevelopmentD/part7/bloglist-frontend/src/reducers/userReducer.js"],"names":["blogService","loginService","userReducer","state","action","type","user","saveToken","username","password","dispatch","login","window","localStorage","setItem","JSON","stringify","setToken","token","getToken","loggedUserJSON","getItem","parse","removeToken","removeItem"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,WAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF,SAAK,WAAL;AACE,aAAOF,MAAM,CAACE,IAAd;;AACF,SAAK,cAAL;AACE,aAAO,IAAP;;AACF,SAAK,SAAL;AACE,aAAOF,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAVF;AAYD,CAbD;;AAeA,OAAO,MAAMI,SAAS,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/C,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMJ,IAAI,GAAG,MAAML,YAAY,CAACU,KAAb,CAAmB;AACpCH,MAAAA,QADoC;AAC1BC,MAAAA;AAD0B,KAAnB,CAAnB;AAGAG,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CACE,mBADF,EACuBC,IAAI,CAACC,SAAL,CAAeV,IAAf,CADvB;AAGAN,IAAAA,WAAW,CAACiB,QAAZ,CAAqBX,IAAI,CAACY,KAA1B;AACAR,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,IAAI,EAAEA;AAFC,KAAD,CAAR;AAID,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMa,QAAQ,GAAG,MAAM;AAC5B,SAAO,MAAMT,QAAN,IAAkB;AACvB,UAAMU,cAAc,GAAGR,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,mBAA5B,CAAvB;AACA,QAAIf,IAAI,GAAG,IAAX;;AACA,QAAIc,cAAJ,EAAoB;AAClBd,MAAAA,IAAI,GAAGS,IAAI,CAACO,KAAL,CAAWF,cAAX,CAAP;AACApB,MAAAA,WAAW,CAACiB,QAAZ,CAAqBX,IAAI,CAACY,KAA1B;AACD;;AACDR,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,IAAI,EAAEA;AAFC,KAAD,CAAR;AAID,GAXD;AAYD,CAbM;AAgBP,OAAO,MAAMiB,WAAW,GAAG,MAAM;AAC/B,SAAO,MAAMb,QAAN,IAAkB;AACvBE,IAAAA,MAAM,CAACC,YAAP,CAAoBW,UAApB,CAA+B,mBAA/B;AACAxB,IAAAA,WAAW,CAACiB,QAAZ,CAAqB,IAArB;AACAP,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAND;AAOD,CARM;AAUP,eAAeH,WAAf","sourcesContent":["import blogService from '../services/blogs'\nimport loginService from '../services/login'\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n  case 'SET_TOKEN':\n    return action.user\n  case 'GET_TOKEN':\n    return action.user\n  case 'REMOVE_TOKEN':\n    return null\n  case 'SIGN_UP':\n    return action.user\n  default:\n    return state\n  }\n}\n\nexport const saveToken = (username, password) => {\n  return async dispatch => {\n    const user = await loginService.login({\n      username, password\n    })\n    window.localStorage.setItem(\n      'loggedBlogappUser', JSON.stringify(user)\n    )\n    blogService.setToken(user.token)\n    dispatch({\n      type: 'SET_TOKEN',\n      user: user\n    })\n  }\n}\n\nexport const getToken = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    let user = null\n    if (loggedUserJSON) {\n      user = JSON.parse(loggedUserJSON)\n      blogService.setToken(user.token)\n    }\n    dispatch({\n      type: 'GET_TOKEN',\n      user: user\n    })\n  }\n}\n\n\nexport const removeToken = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.setToken(null)\n    dispatch({\n      type: 'REMOVE_TOKEN',\n    })\n  }\n}\n\nexport default userReducer\n"]},"metadata":{},"sourceType":"module"}