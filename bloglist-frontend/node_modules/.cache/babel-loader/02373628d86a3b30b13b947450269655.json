{"ast":null,"code":"const notificationReducer = (state = {\n  message: ``,\n  toShow: false,\n  notitype: ''\n}, action) => {\n  switch (action.type) {\n    case 'SUCCESS_NOTIFICATION':\n      return {\n        message: `${action.data.content}`,\n        toShow: true,\n        notitype: true\n      };\n\n    case 'ERROR_NOTIFICATION':\n      return {\n        message: `${action.data.content}`,\n        toShow: true,\n        notitype: false\n      };\n\n    case 'REMOVE_NOTIFICATION':\n      return {\n        message: ``,\n        toShow: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction showNotification(type, content, id) {\n  return {\n    type: type,\n    data: {\n      content\n    },\n    id\n  };\n}\n\nfunction hideNotification(id) {\n  return {\n    type: 'REMOVE_NOTIFICATION',\n    id\n  };\n}\n\nlet nextNotificationId = 0;\nexport const setSuccessNotification = (content, time) => {\n  return function async(dispatch) {\n    const id = nextNotificationId++;\n    dispatch(showNotification('SUCCESS_NOTIFICATION', content, id));\n    setTimeout(() => {\n      dispatch(hideNotification(id));\n    }, time * 1000);\n  };\n};\nexport const setErrorNotification = (content, time) => {\n  return function async(dispatch) {\n    dispatch(showNotification('ERROR_NOTIFICATION', content));\n    setTimeout(() => {\n      dispatch(hideNotification());\n    }, time * 1000);\n  };\n};\nexport default notificationReducer;","map":{"version":3,"sources":["/Users/jdszsl/Desktop/Aalto/Aalto-CommunicationsEngineering/CS-E4670FullStackWebDevelopmentD/part7/bloglist/src/reducers/notificationReducer.js"],"names":["notificationReducer","state","message","toShow","notitype","action","type","data","content","showNotification","id","hideNotification","nextNotificationId","setSuccessNotification","time","async","dispatch","setTimeout","setErrorNotification"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAG,EAAZ;AAAeC,EAAAA,MAAM,EAAE,KAAvB;AAA8BC,EAAAA,QAAQ,EAAE;AAAxC,CAAT,EAAuDC,MAAvD,KAAkE;AAC1F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAO;AAAEJ,QAAAA,OAAO,EAAG,GAAEG,MAAM,CAACE,IAAP,CAAYC,OAAQ,EAAlC;AAAqCL,QAAAA,MAAM,EAAE,IAA7C;AAAoDC,QAAAA,QAAQ,EAAE;AAA9D,OAAP;;AACF,SAAK,oBAAL;AACE,aAAO;AAAEF,QAAAA,OAAO,EAAG,GAAEG,MAAM,CAACE,IAAP,CAAYC,OAAQ,EAAlC;AAAqCL,QAAAA,MAAM,EAAE,IAA7C;AAAmDC,QAAAA,QAAQ,EAAE;AAA7D,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO;AAAEF,QAAAA,OAAO,EAAG,EAAZ;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAAP;;AACF;AACE,aAAOF,KAAP;AARJ;AAUD,CAXH;;AAcA,SAASQ,gBAAT,CAA0BH,IAA1B,EAAgCE,OAAhC,EAAyCE,EAAzC,EAA6C;AAC3C,SAAO;AAAEJ,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KAApB;AAAiCE,IAAAA;AAAjC,GAAP;AACD;;AAED,SAASC,gBAAT,CAA0BD,EAA1B,EAA8B;AAC5B,SAAO;AAAEJ,IAAAA,IAAI,EAAE,qBAAR;AAA+BI,IAAAA;AAA/B,GAAP;AACD;;AAED,IAAIE,kBAAkB,GAAG,CAAzB;AACA,OAAO,MAAMC,sBAAsB,GAAG,CAACL,OAAD,EAAUM,IAAV,KAAmB;AACvD,SAAO,SAASC,KAAT,CAAeC,QAAf,EAAyB;AAC9B,UAAMN,EAAE,GAAGE,kBAAkB,EAA7B;AACAI,IAAAA,QAAQ,CACNP,gBAAgB,CAAC,sBAAD,EAAyBD,OAAzB,EAAkCE,EAAlC,CADV,CAAR;AAIFO,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAACL,gBAAgB,CAACD,EAAD,CAAjB,CAAR;AACD,KAFO,EAELI,IAAI,GAAG,IAFF,CAAV;AAGC,GATD;AAUD,CAXM;AAaP,OAAO,MAAMI,oBAAoB,GAAG,CAACV,OAAD,EAAUM,IAAV,KAAmB;AACrD,SAAO,SAASC,KAAT,CAAeC,QAAf,EAAyB;AAC9BA,IAAAA,QAAQ,CACNP,gBAAgB,CAAC,oBAAD,EAAuBD,OAAvB,CADV,CAAR;AAIFS,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD,KAFO,EAELG,IAAI,GAAG,IAFF,CAAV;AAGC,GARD;AASD,CAVM;AAYP,eAAed,mBAAf","sourcesContent":["const notificationReducer = (state = { message: ``, toShow: false, notitype: '' }, action) => {\n    switch (action.type) {\n      case 'SUCCESS_NOTIFICATION':\n        return { message: `${action.data.content}`, toShow: true,  notitype: true }\n      case 'ERROR_NOTIFICATION':\n        return { message: `${action.data.content}`, toShow: true, notitype: false }\n      case 'REMOVE_NOTIFICATION':\n        return { message: ``, toShow: false }\n      default:\n        return state\n    }\n  }\n\n\nfunction showNotification(type, content, id) {\n  return { type: type, data: { content }, id }\n}\n\nfunction hideNotification(id) {\n  return { type: 'REMOVE_NOTIFICATION', id }\n}\n\nlet nextNotificationId = 0\nexport const setSuccessNotification = (content, time) => {\n  return function async(dispatch) {\n    const id = nextNotificationId++\n    dispatch(\n      showNotification('SUCCESS_NOTIFICATION', content, id)\n    )\n\n  setTimeout(() => {\n      dispatch(hideNotification(id))\n    }, time * 1000)\n  }\n}\n\nexport const setErrorNotification = (content, time) => {\n  return function async(dispatch) {\n    dispatch(\n      showNotification('ERROR_NOTIFICATION', content)\n    )\n\n  setTimeout(() => {\n      dispatch(hideNotification())\n    }, time * 1000)\n  }\n}\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}