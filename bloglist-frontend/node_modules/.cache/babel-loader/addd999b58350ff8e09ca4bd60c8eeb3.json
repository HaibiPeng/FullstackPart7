{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_BLOG':\n      return [...state, action.data];\n\n    case 'INIT_BLOGS':\n      return action.data;\n\n    case 'ADD_LIKES':\n      {\n        const id = action.data.id;\n        const blogToAdd = state.find(n => n.id === id);\n        const changedblog = { ...blogToAdd,\n          likes: blogToAdd.likes + 1\n        };\n        return state.map(blog => blog.id !== id ? blog : changedblog);\n      }\n\n    case 'DELETE_ANECDOTE':\n      {\n        const id = action.data.id;\n        return state.filter(blog => blog.id !== id);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    });\n  };\n};\nexport const createBlog = content => {\n  return async dispatch => {\n    const newBlog = await blogService.create(content);\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog\n    });\n  };\n};\nexport const AddLikes = blog => {\n  return async dispatch => {\n    const id = blog.id;\n    dispatch({\n      type: 'ADD_LIKES',\n      data: {\n        id\n      }\n    });\n    await blogService.addLikes({ ...blog,\n      likes: blog.likes + 1\n    });\n  };\n};\n_c = AddLikes;\nexport const DeleteBlog = blog => {\n  return async dispatch => {\n    const id = blog.id;\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: {\n        id\n      }\n    });\n    await blogService.deleteBlog(id);\n  };\n};\n_c2 = DeleteBlog;\nexport default reducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddLikes\");\n$RefreshReg$(_c2, \"DeleteBlog\");","map":{"version":3,"sources":["/Users/jdszsl/Desktop/Aalto/Aalto-CommunicationsEngineering/CS-E4670FullStackWebDevelopmentD/part7/bloglist/src/reducers/blogReducer.js"],"names":["blogService","reducer","state","action","type","data","id","blogToAdd","find","n","changedblog","likes","map","blog","filter","initializeBlogs","dispatch","blogs","getAll","createBlog","content","newBlog","create","AddLikes","addLikes","DeleteBlog","deleteBlog"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,UAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,IAAlB,CAAP;;AACF,SAAK,YAAL;AACE,aAAOF,MAAM,CAACE,IAAd;;AACF,SAAK,WAAL;AAAiB;AACf,cAAMC,EAAE,GAAGH,MAAM,CAACE,IAAP,CAAYC,EAAvB;AACA,cAAMC,SAAS,GAAGL,KAAK,CAACM,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAzB,CAAlB;AACA,cAAMI,WAAW,GAAG,EAClB,GAAGH,SADe;AAElBI,UAAAA,KAAK,EAAEJ,SAAS,CAACI,KAAV,GAAkB;AAFP,SAApB;AAIA,eAAOT,KAAK,CAACU,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACP,EAAL,KAAYA,EAAZ,GAAiBO,IAAjB,GAAwBH,WADnB,CAAP;AAGD;;AACD,SAAK,iBAAL;AAAuB;AACrB,cAAMJ,EAAE,GAAGH,MAAM,CAACE,IAAP,CAAYC,EAAvB;AACA,eAAOJ,KAAK,CAACY,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAjC,CAAP;AACD;;AACD;AACE,aAAOJ,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,OAAO,MAAMa,eAAe,GAAG,MAAM;AACnC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMjB,WAAW,CAACkB,MAAZ,EAApB;AACAF,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,YADC;AAETC,MAAAA,IAAI,EAAEY;AAFG,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMK,OAAO,GAAG,MAAMrB,WAAW,CAACsB,MAAZ,CAAmBF,OAAnB,CAAtB;AACAJ,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,IAAI,EAAEgB;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,QAAQ,GAAIV,IAAD,IAAU;AAChC,SAAO,MAAMG,QAAN,IAAkB;AACvB,UAAMV,EAAE,GAAGO,IAAI,CAACP,EAAhB;AACAU,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAFC,KAAD,CAAR;AAIA,UAAMN,WAAW,CAACwB,QAAZ,CAAqB,EACzB,GAAGX,IADsB;AAEzBF,MAAAA,KAAK,EAAEE,IAAI,CAACF,KAAL,GAAa;AAFK,KAArB,CAAN;AAID,GAVD;AAWD,CAZM;KAAMY,Q;AAeb,OAAO,MAAME,UAAU,GAAIZ,IAAD,IAAU;AAClC,SAAO,MAAMG,QAAN,IAAkB;AACvB,UAAMV,EAAE,GAAGO,IAAI,CAACP,EAAhB;AACAU,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAFC,KAAD,CAAR;AAIA,UAAMN,WAAW,CAAC0B,UAAZ,CAAuBpB,EAAvB,CAAN;AACD,GAPD;AAQD,CATM;MAAMmB,U;AAWb,eAAexB,OAAf","sourcesContent":["import blogService from '../services/blogs'\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n    case 'NEW_BLOG':\n      return [...state, action.data]\n    case 'INIT_BLOGS':\n      return action.data\n    case 'ADD_LIKES':{\n      const id = action.data.id\n      const blogToAdd = state.find(n => n.id === id)\n      const changedblog = { \n        ...blogToAdd, \n        likes: blogToAdd.likes + 1\n      }\n      return state.map(blog =>\n        blog.id !== id ? blog : changedblog\n      )\n    }\n    case 'DELETE_ANECDOTE':{\n      const id = action.data.id\n      return state.filter(blog => blog.id !== id)\n    }\n    default:\n      return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n    data: blogs,\n    })\n  }\n}\n\nexport const createBlog = (content) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(content)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const AddLikes = (blog) => {\n  return async dispatch => {\n    const id = blog.id\n    dispatch({\n      type: 'ADD_LIKES',\n      data: { id },\n    })\n    await blogService.addLikes({\n      ...blog,\n      likes: blog.likes + 1,\n    })\n  }\n}\n\n\nexport const DeleteBlog = (blog) => {\n  return async dispatch => {\n    const id = blog.id\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: { id },\n    })\n    await blogService.deleteBlog(id)\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}